42 is Jackie Robinson's Uni // Test question


> create synonym scum for empbb02;
// creates a synonym for empbb02

> desc scrum;
// this will describe empbb02;

> select * from scum;

// Difference between synonym and rename, rename changes, synonym is a permanent alias

> drop synonym scum;

> desc user_synonyms

> desc user_views

sequence.sql

SET PAGES 200
SET PAUSE ON
SET ECHO ON
DROP SEQUENCE deptbb02_deptno;
CREATE SEQUENCE deptbb02_deptno
	INCREMENT BY 10
	MINVALUE 10
	START WITH 60
	--MAXVALUE 200
	--NOCACHE
	NOCYCLE;
SELECT * from user_sequences;
INSERT INTO deptbb02 VALUES (deptbb02_deptno.NEXTVAL, 'snacks', null, null, 'keep on trucking');
select * from empbb02;
delete from deptbb02 where deptno > 50;
SELECT deptbb02_deptno.CURRVAL fromm dual;
-- CREATE INDEX empbb02_ename_ndx ON empbb02(ename);


// Allows you to create unique integers.
NOCYCLE
	- Specify NOCYCLE to indicate that the sequence cannot generate more values after reaching its maximum or minimum value. This is the default.

CREATE INDEX empbb02_ename_ndx ON empbb02(ename);


Index
	- When you create a primary key, you create an index on the columns of the primary key
	- The values of the primary key columns allows rapid search
	- If we frequently query via last name, (last names are often unique), we can index last name to improve search
	- implementation: Separate datastructures for columns

desc user_indexes;

MIDTERM: Around first 10 days of March
as of now, we have covered most of Midterm 1


> insert into deptbb02 values (&no, 'snacks' , null, null, null);
PROMPT: Empty value for no: 60

^^^^^^^^^
Substitution variable
runtime variable
	Applicationalize entries


accept.sql

ACCEPT num PROMPT 'Please enter the age of an uncle: '
ACCEPT str PROMPT 'Please enter the name of an uncle: '
ACCEPT iq PROMPT 'Please enter the IQ of your uncle: '
INSERT INTO tp VALUES(&num,'&str',&ig');

